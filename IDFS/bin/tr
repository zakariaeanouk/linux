#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import sys
import logging
from pathlib import Path

def configure_logging():
    try:
        # Chemin du repertoire log (chemin absolu)
        log_directory = '/home/IDFS/var/log'
        log_file_path = log_directory / "logfile.log"

        # Creer le repertoire log s'il n'existe pas
        log_directory.mkdir(parents=True, exist_ok=True)

        # Configuration du logging
        logging.basicConfig(filename=log_file_path, level=logging.DEBUG,
                            format='%(asctime)s - %(levelname)s - %(message)s')
    except Exception as e:
        error_message = f"Une erreur s'est produite lors de la configuration du logging : {e}"
        print(error_message)
        logging.error(error_message.encode('utf-8'))

def tr(directory, file_extension=None):
    try:
        # Utiliser os.walk pour parcourir la hierarchie de fichiers
        for root, dirs, files in os.walk(directory):
            for file in files:
                # Verifier si une extension de fichier est specifiee
                if file_extension:
                    if file.endswith(file_extension):
                        file_path = os.path.join(root, file)
                        print(file_path)
                        logging.info(f"Fichier trouve : {file_path}")
                else:
                    file_path = os.path.join(root, file)
                    print(file_path)
                    logging.info(f"Fichier trouve : {file_path}")
    except Exception as e:
        error_message = f"Erreur lors de la recherche : {e}"
        print(error_message)
        logging.error(error_message)

if __name__ == "__main__":
    configure_logging()

    if len(sys.argv) < 2:
        error_message = f"Usage: {sys.argv[0]} <directory> [file_extension]"
        print(error_message)
        logging.error(error_message)
        sys.exit(1)

    directory = sys.argv[1]
    file_extension = sys.argv[2] if len(sys.argv) == 3 else None

    tr(directory, file_extension)

  