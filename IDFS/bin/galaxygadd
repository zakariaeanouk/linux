#!/usr/bin/env python3
import os
import logging

def galaxygadd():
    # Configurer le logging
    log_directory = '/home/IDFS/var/log'  # Assurez-vous que le rÃ©pertoire existe et a les permissions nÃ©cessaires
    log_file_path = os.path.join(log_directory, 'logfile.log')

    # CrÃ©er le rÃ©pertoire s'il n'existe pas
    os.makedirs(log_directory, exist_ok=True)

    logging.basicConfig(filename=log_file_path, level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

    # VÃ©rifier si l'utilisateur actuel est root
    if os.geteuid() != 0:
        logging.error("Permission denied. Vous devez exÃ©cuter ce script en tant que superutilisateur (root).")
        return

    # Saisie du nom du groupe
    groupname = input("Entrez le nom du groupe : ")

    # Emplacement du fichier simulÃ© ID1FS/etc/group (chemin absolu)
    group_file_path = '/home/IDFS/etc/group'

    # VÃ©rifier si le groupe existe dÃ©jÃ 
    with open(group_file_path, 'r') as group_file:
        existing_groupnames = [line.split(':')[0] for line in group_file.readlines()]

    if groupname in existing_groupnames:
        logging.warning(f"Le groupe {groupname} existe dÃ©jÃ .")
        return

    # Ajouter l'entrÃ©e dans le fichier simulÃ© ID1FS/etc/group
    try:
        gid = len(existing_groupnames) + 1000  # GÃ©nÃ©rer un GID unique (Ã  adapter selon les besoins)

        group_entry = f"{groupname}:x:{gid}:
"
        with open(group_file_path, 'a') as group_file:
            group_file.write(group_entry)

        logging.info(f"Le groupe {groupname} a Ã©tÃ© ajoutÃ© avec succÃ¨s.")
    except Exception as e:
        logging.error(f"Erreur lors de l'ajout du groupe {groupname} : {e}")

# Utilisation de la fonction
galaxygadd()
